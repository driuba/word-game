import type { MigrationInterface, QueryRunner } from "typeorm";

export class Init1745769778358 implements MigrationInterface {
    name = 'Init1745769778358'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "Words" ("ChannelId" character varying(50) NOT NULL, "Created" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "Id" SERIAL NOT NULL, "Score" integer NOT NULL DEFAULT '0', "Modified" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "UserIdCreator" character varying(50) NOT NULL, "UserIdGuesser" character varying(50), "Word" character varying NOT NULL, CONSTRAINT "PK_c407d0d6a998bc4d704b2852ad6" PRIMARY KEY ("Id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_7a5fe03f7122fb5ca505e56c12" ON "Words" ("ChannelId") `);
        await queryRunner.query(`CREATE INDEX "IDX_5f3a1c9ea3160648b5afdf369d" ON "Words" ("UserIdCreator") `);
        await queryRunner.query(`CREATE INDEX "IDX_01f4cba697b9581dad8ac459d5" ON "Words" ("UserIdGuesser") `);
        await queryRunner.query(`CREATE VIEW "Statistics" AS WITH "WordsGuessedAll" AS (SELECT * FROM "wg"."Words" "w" WHERE "w"."UserIdGuesser" IS NOT NULL), "WordsGuessedWeek" AS (SELECT * FROM "WordsGuessedAll" "wga" WHERE "wga"."Created" >= date_trunc('week', CURRENT_TIMESTAMP)), "ChannelUsers" AS (SELECT "wga"."ChannelId", "wga"."UserIdCreator" AS "UserId" FROM "WordsGuessedAll" "wga" UNION SELECT "wga"."ChannelId", "wga"."UserIdGuesser" AS "UserId" FROM "WordsGuessedAll" "wga"), "GuessesAll" AS (SELECT "w"."ChannelId", "w"."UserIdGuesser" AS "UserId", COUNT(1) AS "Guesses" FROM "WordsGuessedAll" "w" GROUP BY "w"."ChannelId", "w"."UserIdGuesser"), "GuessesWeek" AS (SELECT "w"."ChannelId", "w"."UserIdGuesser" AS "UserId", COUNT(1) AS "Guesses" FROM "WordsGuessedWeek" "w" GROUP BY "w"."ChannelId", "w"."UserIdGuesser"), "ScoresAll" AS (SELECT "w"."ChannelId", "w"."UserIdCreator" AS "UserId", SUM("w"."Score") AS "Score", AVG("w"."Score") AS "Average", MAX("w"."Score") AS "Maximum" FROM "WordsGuessedAll" "w" GROUP BY "w"."ChannelId", "w"."UserIdCreator"), "ScoresWeek" AS (SELECT "w"."ChannelId", "w"."UserIdCreator" AS "UserId", SUM("w"."Score") AS "Score", AVG("w"."Score") AS "Average", MAX("w"."Score") AS "Maximum" FROM "WordsGuessedWeek" "w" GROUP BY "w"."ChannelId", "w"."UserIdCreator") SELECT "cu"."ChannelId", "cu"."UserId", COALESCE("sw"."Score", 0) AS "ScoreWeek", COALESCE("sw"."Average", 0) AS "AverageWeek", COALESCE("sw"."Maximum", 0) AS "MaximumWeek", COALESCE("gw"."Guesses", 0) AS "GuessesWeek", COALESCE("sa"."Score", 0) AS "ScoreAll", COALESCE("sa"."Average", 0) AS "AverageAll", COALESCE("sa"."Maximum", 0) AS "MaximumAll", COALESCE("ga"."Guesses", 0) AS "GuessesAll" FROM "ChannelUsers" "cu" LEFT JOIN "GuessesAll" "ga" ON "ga"."ChannelId" = "cu"."ChannelId" AND "ga"."UserId" = "cu"."UserId"  LEFT JOIN "GuessesWeek" "gw" ON "gw"."ChannelId" = "cu"."ChannelId" AND "gw"."UserId" = "cu"."UserId"  LEFT JOIN "ScoresAll" "sa" ON "sa"."ChannelId" = "cu"."ChannelId" AND "sa"."UserId" = "cu"."UserId"  LEFT JOIN "ScoresWeek" "sw" ON "sw"."ChannelId" = "cu"."ChannelId" AND "sw"."UserId" = "cu"."UserId" ORDER BY "sa"."Score" DESC NULLS LAST, "ga"."Guesses" DESC NULLS LAST`);
        await queryRunner.query(`INSERT INTO "wg"."typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["wg","VIEW","Statistics","WITH \"WordsGuessedAll\" AS (SELECT * FROM \"wg\".\"Words\" \"w\" WHERE \"w\".\"UserIdGuesser\" IS NOT NULL), \"WordsGuessedWeek\" AS (SELECT * FROM \"WordsGuessedAll\" \"wga\" WHERE \"wga\".\"Created\" >= date_trunc('week', CURRENT_TIMESTAMP)), \"ChannelUsers\" AS (SELECT \"wga\".\"ChannelId\", \"wga\".\"UserIdCreator\" AS \"UserId\" FROM \"WordsGuessedAll\" \"wga\" UNION SELECT \"wga\".\"ChannelId\", \"wga\".\"UserIdGuesser\" AS \"UserId\" FROM \"WordsGuessedAll\" \"wga\"), \"GuessesAll\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\" AS \"UserId\", COUNT(1) AS \"Guesses\" FROM \"WordsGuessedAll\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\"), \"GuessesWeek\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\" AS \"UserId\", COUNT(1) AS \"Guesses\" FROM \"WordsGuessedWeek\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\"), \"ScoresAll\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdCreator\" AS \"UserId\", SUM(\"w\".\"Score\") AS \"Score\", AVG(\"w\".\"Score\") AS \"Average\", MAX(\"w\".\"Score\") AS \"Maximum\" FROM \"WordsGuessedAll\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdCreator\"), \"ScoresWeek\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdCreator\" AS \"UserId\", SUM(\"w\".\"Score\") AS \"Score\", AVG(\"w\".\"Score\") AS \"Average\", MAX(\"w\".\"Score\") AS \"Maximum\" FROM \"WordsGuessedWeek\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdCreator\") SELECT \"cu\".\"ChannelId\", \"cu\".\"UserId\", COALESCE(\"sw\".\"Score\", 0) AS \"ScoreWeek\", COALESCE(\"sw\".\"Average\", 0) AS \"AverageWeek\", COALESCE(\"sw\".\"Maximum\", 0) AS \"MaximumWeek\", COALESCE(\"gw\".\"Guesses\", 0) AS \"GuessesWeek\", COALESCE(\"sa\".\"Score\", 0) AS \"ScoreAll\", COALESCE(\"sa\".\"Average\", 0) AS \"AverageAll\", COALESCE(\"sa\".\"Maximum\", 0) AS \"MaximumAll\", COALESCE(\"ga\".\"Guesses\", 0) AS \"GuessesAll\" FROM \"ChannelUsers\" \"cu\" LEFT JOIN \"GuessesAll\" \"ga\" ON \"ga\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"ga\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"GuessesWeek\" \"gw\" ON \"gw\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"gw\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"ScoresAll\" \"sa\" ON \"sa\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"sa\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"ScoresWeek\" \"sw\" ON \"sw\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"sw\".\"UserId\" = \"cu\".\"UserId\" ORDER BY \"sa\".\"Score\" DESC NULLS LAST, \"ga\".\"Guesses\" DESC NULLS LAST"]);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DELETE FROM "wg"."typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","Statistics","wg"]);
        await queryRunner.query(`DROP VIEW "Statistics"`);
        await queryRunner.query(`DROP INDEX "wg"."IDX_01f4cba697b9581dad8ac459d5"`);
        await queryRunner.query(`DROP INDEX "wg"."IDX_5f3a1c9ea3160648b5afdf369d"`);
        await queryRunner.query(`DROP INDEX "wg"."IDX_7a5fe03f7122fb5ca505e56c12"`);
        await queryRunner.query(`DROP TABLE "Words"`);
    }

}
