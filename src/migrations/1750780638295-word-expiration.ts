import type { MigrationInterface, QueryRunner } from "typeorm";

export class WordExpiration1750780638295 implements MigrationInterface {
    name = 'WordExpiration1750780638295'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "Words" ADD "Expired" TIMESTAMP WITH TIME ZONE`);
        await queryRunner.query(`ALTER TABLE "Words" ADD "Active" BOOLEAN GENERATED ALWAYS AS ("Expired" IS NULL AND "UserIdGuesser" IS NULL) STORED`);
        await queryRunner.query(`DELETE FROM "wg"."typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","StatisticsChannel","wg"]);
        await queryRunner.query(`CREATE OR REPLACE VIEW "StatisticsChannel" AS WITH "WordsGuessedAll" AS (SELECT * FROM "wg"."Words" "w" WHERE "w"."Active"), "WordsGuessedWeek" AS (SELECT * FROM "WordsGuessedAll" "wga" WHERE "wga"."Created" >= date_trunc('week', CURRENT_TIMESTAMP)), "ChannelUsers" AS (SELECT "wga"."ChannelId", "wga"."UserIdCreator" AS "UserId" FROM "WordsGuessedAll" "wga" UNION SELECT "wga"."ChannelId", "wga"."UserIdGuesser" AS "UserId" FROM "WordsGuessedAll" "wga"), "GuessesAll" AS (SELECT "w"."ChannelId", "w"."UserIdGuesser" AS "UserId", COUNT(1) AS "Guesses" FROM "WordsGuessedAll" "w" GROUP BY "w"."ChannelId", "w"."UserIdGuesser"), "GuessesWeek" AS (SELECT "w"."ChannelId", "w"."UserIdGuesser" AS "UserId", COUNT(1) AS "Guesses" FROM "WordsGuessedWeek" "w" GROUP BY "w"."ChannelId", "w"."UserIdGuesser"), "ScoresAll" AS (SELECT "w"."ChannelId", "w"."UserIdCreator" AS "UserId", COUNT(1) AS "Count", SUM("w"."Score") AS "Score", AVG("w"."Score") AS "Average", MAX("w"."Score") AS "Maximum" FROM "WordsGuessedAll" "w" GROUP BY "w"."ChannelId", "w"."UserIdCreator"), "ScoresWeek" AS (SELECT "w"."ChannelId", "w"."UserIdCreator" AS "UserId", COUNT(1) AS "Count", SUM("w"."Score") AS "Score", AVG("w"."Score") AS "Average", MAX("w"."Score") AS "Maximum" FROM "WordsGuessedWeek" "w" GROUP BY "w"."ChannelId", "w"."UserIdCreator") SELECT "cu"."ChannelId", "cu"."UserId", COALESCE("sw"."Count", 0) AS "CountWeek", COALESCE("sw"."Score", 0) AS "ScoreWeek", COALESCE("sw"."Average", 0) AS "AverageWeek", COALESCE("sw"."Maximum", 0) AS "MaximumWeek", COALESCE("gw"."Guesses", 0) AS "GuessesWeek", COALESCE("sa"."Count", 0) AS "CountAll", COALESCE("sa"."Score", 0) AS "ScoreAll", COALESCE("sa"."Average", 0) AS "AverageAll", COALESCE("sa"."Maximum", 0) AS "MaximumAll", COALESCE("ga"."Guesses", 0) AS "GuessesAll" FROM "ChannelUsers" "cu" LEFT JOIN "GuessesAll" "ga" ON "ga"."ChannelId" = "cu"."ChannelId" AND "ga"."UserId" = "cu"."UserId"  LEFT JOIN "GuessesWeek" "gw" ON "gw"."ChannelId" = "cu"."ChannelId" AND "gw"."UserId" = "cu"."UserId"  LEFT JOIN "ScoresAll" "sa" ON "sa"."ChannelId" = "cu"."ChannelId" AND "sa"."UserId" = "cu"."UserId"  LEFT JOIN "ScoresWeek" "sw" ON "sw"."ChannelId" = "cu"."ChannelId" AND "sw"."UserId" = "cu"."UserId" ORDER BY "sa"."Score" DESC NULLS LAST, "ga"."Guesses" DESC NULLS LAST`);
        await queryRunner.query(`INSERT INTO "wg"."typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["wg","VIEW","StatisticsChannel","WITH \"WordsGuessedAll\" AS (SELECT * FROM \"wg\".\"Words\" \"w\" WHERE \"w\".\"Active\"), \"WordsGuessedWeek\" AS (SELECT * FROM \"WordsGuessedAll\" \"wga\" WHERE \"wga\".\"Created\" >= date_trunc('week', CURRENT_TIMESTAMP)), \"ChannelUsers\" AS (SELECT \"wga\".\"ChannelId\", \"wga\".\"UserIdCreator\" AS \"UserId\" FROM \"WordsGuessedAll\" \"wga\" UNION SELECT \"wga\".\"ChannelId\", \"wga\".\"UserIdGuesser\" AS \"UserId\" FROM \"WordsGuessedAll\" \"wga\"), \"GuessesAll\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\" AS \"UserId\", COUNT(1) AS \"Guesses\" FROM \"WordsGuessedAll\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\"), \"GuessesWeek\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\" AS \"UserId\", COUNT(1) AS \"Guesses\" FROM \"WordsGuessedWeek\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\"), \"ScoresAll\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdCreator\" AS \"UserId\", COUNT(1) AS \"Count\", SUM(\"w\".\"Score\") AS \"Score\", AVG(\"w\".\"Score\") AS \"Average\", MAX(\"w\".\"Score\") AS \"Maximum\" FROM \"WordsGuessedAll\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdCreator\"), \"ScoresWeek\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdCreator\" AS \"UserId\", COUNT(1) AS \"Count\", SUM(\"w\".\"Score\") AS \"Score\", AVG(\"w\".\"Score\") AS \"Average\", MAX(\"w\".\"Score\") AS \"Maximum\" FROM \"WordsGuessedWeek\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdCreator\") SELECT \"cu\".\"ChannelId\", \"cu\".\"UserId\", COALESCE(\"sw\".\"Count\", 0) AS \"CountWeek\", COALESCE(\"sw\".\"Score\", 0) AS \"ScoreWeek\", COALESCE(\"sw\".\"Average\", 0) AS \"AverageWeek\", COALESCE(\"sw\".\"Maximum\", 0) AS \"MaximumWeek\", COALESCE(\"gw\".\"Guesses\", 0) AS \"GuessesWeek\", COALESCE(\"sa\".\"Count\", 0) AS \"CountAll\", COALESCE(\"sa\".\"Score\", 0) AS \"ScoreAll\", COALESCE(\"sa\".\"Average\", 0) AS \"AverageAll\", COALESCE(\"sa\".\"Maximum\", 0) AS \"MaximumAll\", COALESCE(\"ga\".\"Guesses\", 0) AS \"GuessesAll\" FROM \"ChannelUsers\" \"cu\" LEFT JOIN \"GuessesAll\" \"ga\" ON \"ga\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"ga\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"GuessesWeek\" \"gw\" ON \"gw\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"gw\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"ScoresAll\" \"sa\" ON \"sa\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"sa\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"ScoresWeek\" \"sw\" ON \"sw\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"sw\".\"UserId\" = \"cu\".\"UserId\" ORDER BY \"sa\".\"Score\" DESC NULLS LAST, \"ga\".\"Guesses\" DESC NULLS LAST"]);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DELETE FROM "wg"."typeorm_metadata" WHERE "type" = $1 AND "name" = $2 AND "schema" = $3`, ["VIEW","StatisticsChannel","wg"]);
        await queryRunner.query(`CREATE OR REPLACE VIEW "StatisticsChannel" AS WITH "WordsGuessedAll" AS (SELECT * FROM "wg"."Words" "w" WHERE "w"."UserIdGuesser" IS NOT NULL), "WordsGuessedWeek" AS (SELECT * FROM "WordsGuessedAll" "wga" WHERE "wga"."Created" >= date_trunc('week', CURRENT_TIMESTAMP)), "ChannelUsers" AS (SELECT "wga"."ChannelId", "wga"."UserIdCreator" AS "UserId" FROM "WordsGuessedAll" "wga" UNION SELECT "wga"."ChannelId", "wga"."UserIdGuesser" AS "UserId" FROM "WordsGuessedAll" "wga"), "GuessesAll" AS (SELECT "w"."ChannelId", "w"."UserIdGuesser" AS "UserId", COUNT(1) AS "Guesses" FROM "WordsGuessedAll" "w" GROUP BY "w"."ChannelId", "w"."UserIdGuesser"), "GuessesWeek" AS (SELECT "w"."ChannelId", "w"."UserIdGuesser" AS "UserId", COUNT(1) AS "Guesses" FROM "WordsGuessedWeek" "w" GROUP BY "w"."ChannelId", "w"."UserIdGuesser"), "ScoresAll" AS (SELECT "w"."ChannelId", "w"."UserIdCreator" AS "UserId", COUNT(1) AS "Count", SUM("w"."Score") AS "Score", AVG("w"."Score") AS "Average", MAX("w"."Score") AS "Maximum" FROM "WordsGuessedAll" "w" GROUP BY "w"."ChannelId", "w"."UserIdCreator"), "ScoresWeek" AS (SELECT "w"."ChannelId", "w"."UserIdCreator" AS "UserId", COUNT(1) AS "Count", SUM("w"."Score") AS "Score", AVG("w"."Score") AS "Average", MAX("w"."Score") AS "Maximum" FROM "WordsGuessedWeek" "w" GROUP BY "w"."ChannelId", "w"."UserIdCreator") SELECT "cu"."ChannelId", "cu"."UserId", COALESCE("sw"."Count", 0) AS "CountWeek", COALESCE("sw"."Score", 0) AS "ScoreWeek", COALESCE("sw"."Average", 0) AS "AverageWeek", COALESCE("sw"."Maximum", 0) AS "MaximumWeek", COALESCE("gw"."Guesses", 0) AS "GuessesWeek", COALESCE("sa"."Count", 0) AS "CountAll", COALESCE("sa"."Score", 0) AS "ScoreAll", COALESCE("sa"."Average", 0) AS "AverageAll", COALESCE("sa"."Maximum", 0) AS "MaximumAll", COALESCE("ga"."Guesses", 0) AS "GuessesAll" FROM "ChannelUsers" "cu" LEFT JOIN "GuessesAll" "ga" ON "ga"."ChannelId" = "cu"."ChannelId" AND "ga"."UserId" = "cu"."UserId"  LEFT JOIN "GuessesWeek" "gw" ON "gw"."ChannelId" = "cu"."ChannelId" AND "gw"."UserId" = "cu"."UserId"  LEFT JOIN "ScoresAll" "sa" ON "sa"."ChannelId" = "cu"."ChannelId" AND "sa"."UserId" = "cu"."UserId"  LEFT JOIN "ScoresWeek" "sw" ON "sw"."ChannelId" = "cu"."ChannelId" AND "sw"."UserId" = "cu"."UserId" ORDER BY "sa"."Score" DESC NULLS LAST, "ga"."Guesses" DESC NULLS LAST`);
        await queryRunner.query(`INSERT INTO "wg"."typeorm_metadata"("database", "schema", "table", "type", "name", "value") VALUES (DEFAULT, $1, DEFAULT, $2, $3, $4)`, ["wg","VIEW","StatisticsChannel","WITH \"WordsGuessedAll\" AS (SELECT * FROM \"wg\".\"Words\" \"w\" WHERE \"w\".\"UserIdGuesser\" IS NOT NULL), \"WordsGuessedWeek\" AS (SELECT * FROM \"WordsGuessedAll\" \"wga\" WHERE \"wga\".\"Created\" >= date_trunc('week', CURRENT_TIMESTAMP)), \"ChannelUsers\" AS (SELECT \"wga\".\"ChannelId\", \"wga\".\"UserIdCreator\" AS \"UserId\" FROM \"WordsGuessedAll\" \"wga\" UNION SELECT \"wga\".\"ChannelId\", \"wga\".\"UserIdGuesser\" AS \"UserId\" FROM \"WordsGuessedAll\" \"wga\"), \"GuessesAll\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\" AS \"UserId\", COUNT(1) AS \"Guesses\" FROM \"WordsGuessedAll\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\"), \"GuessesWeek\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\" AS \"UserId\", COUNT(1) AS \"Guesses\" FROM \"WordsGuessedWeek\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdGuesser\"), \"ScoresAll\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdCreator\" AS \"UserId\", COUNT(1) AS \"Count\", SUM(\"w\".\"Score\") AS \"Score\", AVG(\"w\".\"Score\") AS \"Average\", MAX(\"w\".\"Score\") AS \"Maximum\" FROM \"WordsGuessedAll\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdCreator\"), \"ScoresWeek\" AS (SELECT \"w\".\"ChannelId\", \"w\".\"UserIdCreator\" AS \"UserId\", COUNT(1) AS \"Count\", SUM(\"w\".\"Score\") AS \"Score\", AVG(\"w\".\"Score\") AS \"Average\", MAX(\"w\".\"Score\") AS \"Maximum\" FROM \"WordsGuessedWeek\" \"w\" GROUP BY \"w\".\"ChannelId\", \"w\".\"UserIdCreator\") SELECT \"cu\".\"ChannelId\", \"cu\".\"UserId\", COALESCE(\"sw\".\"Count\", 0) AS \"CountWeek\", COALESCE(\"sw\".\"Score\", 0) AS \"ScoreWeek\", COALESCE(\"sw\".\"Average\", 0) AS \"AverageWeek\", COALESCE(\"sw\".\"Maximum\", 0) AS \"MaximumWeek\", COALESCE(\"gw\".\"Guesses\", 0) AS \"GuessesWeek\", COALESCE(\"sa\".\"Count\", 0) AS \"CountAll\", COALESCE(\"sa\".\"Score\", 0) AS \"ScoreAll\", COALESCE(\"sa\".\"Average\", 0) AS \"AverageAll\", COALESCE(\"sa\".\"Maximum\", 0) AS \"MaximumAll\", COALESCE(\"ga\".\"Guesses\", 0) AS \"GuessesAll\" FROM \"ChannelUsers\" \"cu\" LEFT JOIN \"GuessesAll\" \"ga\" ON \"ga\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"ga\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"GuessesWeek\" \"gw\" ON \"gw\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"gw\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"ScoresAll\" \"sa\" ON \"sa\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"sa\".\"UserId\" = \"cu\".\"UserId\"  LEFT JOIN \"ScoresWeek\" \"sw\" ON \"sw\".\"ChannelId\" = \"cu\".\"ChannelId\" AND \"sw\".\"UserId\" = \"cu\".\"UserId\" ORDER BY \"sa\".\"Score\" DESC NULLS LAST, \"ga\".\"Guesses\" DESC NULLS LAST"]);
        await queryRunner.query(`ALTER TABLE "Words" DROP COLUMN "Active"`);
        await queryRunner.query(`ALTER TABLE "Words" DROP COLUMN "Expired"`);
    }

}
